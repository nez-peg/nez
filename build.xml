<project name="libbun" default="jar">
	<!-- directory / file definition -->
	<property name="BinaryName" value="nez" />
	<property name="source_dir" value="src" />
	<property name="build_dir"  value="build" />
	<property name="root_dir"   value="." />
	<property name="jline_jar"  value="ext/jline-1.0.jar" />
	<property name="asm_jar"    value="ext/asm-all-4.0.jar" />
	<property name="test_dir"       value="unit_test" />
	<property name="junit_jar"      value="ext/junit-4.10.jar" />
	<property name="build_test_dir" value="build_test" />
	<property name="test_result"    value="test_result" />

	<condition property="have.cobertura">
		<available file="${lib.cobertura.dir}" />
	</condition>

	<condition property="have.pmd">
		<available file="${lib.pmd.dir}" />
	</condition>

	<!-- ================================== -->
	<!--                BUILD               -->
	<!-- ================================== -->
	<target name="build">
		<mkdir dir="${build_dir}" />
		<javac fork="true" srcdir="${source_dir}" destdir="${build_dir}" target="1.8" source="1.8"
			debug="yes" debuglevel="lines,vars,source" includeantruntime="false" encoding = "UTF-8">
			<classpath path="${jline_jar}" />
			<classpath path="${asm_jar}" />
			<include name="**/*.java" />
			<exclude name="**/*Test.java" />
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- ================================== -->
	<!--            GENERATE JAR            -->
	<!-- ================================== -->
	<target name="jar" depends="build">
		<jar jarfile="${BinaryName}.jar">
			<fileset dir="${build_dir}" includes="**/*.class" />
			<fileset dir="${source_dir}" includes="**/*.nez" />
			<fileset dir="." includes="lib/**" />
			<exclude name="**/*Test.class" />
			<manifest>
				<attribute name="Main-Class" value="nez.main.Command" />
			</manifest>
			<zipfileset src="${jline_jar}" />
			<zipfileset src="${asm_jar}" />
		</jar>
	</target>

	<!-- ================================== -->
	<!--               CLEAN                -->
	<!-- ================================== -->
	<target name="clean">
		<delete dir="${build_dir}" />
		<delete file="${BinaryName}.jar" />
		<delete dir="${build_test_dir}"/>
	</target>

	<!-- ================================== -->
	<!--             TEST PREPARE           -->
	<!-- ================================== -->
	<target name ="test_prepare" depends="jar">
		<mkdir dir="${build_test_dir}" />
		<mkdir dir="${test_result}" />
		<javac srcdir="${test_dir}/java" destdir="${build_test_dir}" debug="on" target="1.8" source="1.8" includeantruntime="false">
			<classpath path="${BinaryName}.jar" />
			<classpath path="${junit_jar}" />
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- ================================== -->
	<!--               TEST                 -->
	<!-- ================================== -->
	<target name="test" depends="test_prepare">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${junit_jar}" />
				<pathelement path="${BinaryName}.jar" />
				<pathelement location="${build_test_dir}" />
				<pathelement location="${test_dir}/resources" />
			</classpath>
			<formatter type="plain" />
			<batchtest fork="yes" todir="${test_result}">
				<fileset dir="${test_dir}/java" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

</project>
