<project name="nez" default="tool">
	<!-- directory / file definition -->
	<property name="BinaryName" value="nez" />
	<property name="LibName" value="libnez" />
	<property name="source_dir" value="src" />
	<property name="tool_dir" value="tool" />
	<property name="devel_dir" value="devel" />
	<property name="build_dir" value="build" />
	<property name="root_dir" value="." />
	<property name="jline_jar" value="ext/jline-1.0.jar" />
	<property name="test_dir" value="unit_test" />
	<property name="junit_jar" value="ext/junit-4.10.jar" />
	<property name="build_test_dir" value="build_test" />
	<property name="test_result" value="test_result" />

	<!-- ================================== -->
	<!-- BUILD -->
	<!-- ================================== -->
	<target name="build">
		<mkdir dir="${build_dir}" />
		<javac fork="true" encoding="UTF-8" srcdir="${source_dir};"
			destdir="${build_dir}" target="1.8" source="1.8" debug="yes"
			debuglevel="lines,vars,source" includeantruntime="false">
			<include name="**/*.java" />
			<exclude name="**/*Test.java" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<target name="build_devel">
		<mkdir dir="${build_dir}" />
		<javac fork="true" encoding="UTF-8" srcdir="${source_dir};${tool_dir};${devel_dir}"
			destdir="${build_dir}" target="1.8" source="1.8" debug="yes"
			debuglevel="lines,vars,source" includeantruntime="false">
			<classpath path="${jline_jar}" />
			<include name="**/*.java" />
			<exclude name="**/*Test.java" />
			<compilerarg value="-Xlint:deprecation" />
		</javac>
	</target>

	<!-- ================================== -->
	<!-- GENERATE JAR -->
	<!-- ================================== -->

	<target name="lib" depends="build">
		<jar jarfile="${LibName}.jar">
			<fileset dir="${build_dir}" includes="**/*.class" />
			<exclude name="**/*Test.class" />
		</jar>
	</target>
	
	<target name="tool" depends="build_devel">
		<jar jarfile="${BinaryName}.jar">
			<fileset dir="${build_dir}" includes="**/*.class" />
			<fileset dir="${tool_dir}"  includes="**/*.class" />
			<fileset dir="${tool_dir}" includes="**/*.nez" />
            <fileset dir="${tool_dir}" includes="**/*.properties" />
			<exclude name="**/*Test.class" />
			<manifest>
				<attribute name="Main-Class" value="nez.main.Command" />
			</manifest>
			<zipfileset src="${jline_jar}" />
		</jar>
	</target>

	<target name="all" depends="build_devel">
		<jar jarfile="${BinaryName}-devel.jar">
			<fileset dir="${build_dir}" includes="**/*.class" />
			<fileset dir="${tool_dir}"  includes="**/*.class" />
			<fileset dir="${devel_dir}"  includes="**/*.class" />
			<fileset dir="${tool_dir}" includes="**/*.nez" />
            <fileset dir="${tool_dir}" includes="**/*.properties" />
			<exclude name="**/*Test.class" />
			<manifest>
				<attribute name="Main-Class" value="nez.main.Command" />
			</manifest>
			<zipfileset src="${jline_jar}" />
		</jar>
	</target>


	<!-- ================================== -->
	<!-- CLEAN -->
	<!-- ================================== -->
	<target name="clean">
		<delete dir="${build_dir}" />
		<delete file="${BinaryName}.jar" />
		<delete file="${BinaryName}-devel.jar" />
		<delete file="${LibName}.jar" />
		<delete dir="${build_test_dir}" />
	</target>

	<!-- ================================== -->
	<!-- TEST PREPARE -->
	<!-- ================================== -->
	<target name="test_prepare" depends="tool">
		<mkdir dir="${build_test_dir}" />
		<mkdir dir="${test_result}" />
		<javac srcdir="${test_dir}/java" destdir="${build_test_dir}"
			debug="on" target="1.8" source="1.8" includeantruntime="false">
			<classpath path="${BinaryName}.jar" />
			<classpath path="${junit_jar}" />
			<compilerarg value="-Xlint:deprecation" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>

	<!-- ================================== -->
	<!-- TEST -->
	<!-- ================================== -->
	<target name="test" depends="test_prepare">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath>
				<pathelement path="${junit_jar}" />
				<pathelement path="${BinaryName}.jar" />
				<pathelement location="${build_test_dir}" />
				<pathelement location="${test_dir}/resources" />
			</classpath>
			<formatter type="plain" />
			<batchtest fork="yes" todir="${test_result}">
				<fileset dir="${test_dir}/java" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

</project>
